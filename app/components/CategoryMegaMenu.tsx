import { Link } from '@remix-run/react'
import { useState } from 'react'
import { Dialog, DialogBackdrop, DialogPanel, DialogTitle, TransitionChild } from '@headlessui/react'

interface CategoryMegaMenuProps {
  isOpen: boolean
  onClose: () => void
}

const categories = [
  {
    id: 'audio-video',
    name: '–ó–£–†–ê–ì–¢, –ê–£–î–ò–û',
    icon: 'üì∫',
    subcategories: [
      {
        name: '–ó—É—Ä–∞–≥—Ç',
        items: [
          '43 —Ö“Ø—Ä—Ç—ç–ª –∏–Ω—á',
          '44-50 –∏–Ω—á',
          '51-55 –∏–Ω—á',
          '56-75 –∏–Ω—á',
          '76-—Å –¥—ç—ç—à –∏–Ω—á'
        ]
      },
      {
        name: '–ê—É–¥–∏–æ, –≤–∏–¥–µ–æ —Ç–µ—Ö–æ–±–æ—Ä–æ–º–∂',
        items: [
          '–®—É—É—Ç –Ω–∞–º—Ö—É—É–ª–ª—ã–Ω —Ç–µ—Ö–æ–±–æ—Ä–æ–º–∂',
          '–¢–∞–π–≤–∞–Ω / –°—Ç—É–¥–∏–π–Ω —á–∞–Ω–≥–∞ —è—Ä–∏–≥—á',
          '–î—É—É–Ω—ã —Ö–æ–ª–∏–≥–∏–π–Ω —Å–∏—Å—Ç–µ–º, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
          '–°—Ç—É–¥–∏–π–Ω –º–∏–∫—Ä–æ—Ñ–æ–Ω, A4V',
          '–ß–∏—Ö–Ω–∏–π –º–æ–Ω–∏—Ç–æ—Ä–Ω —Å–∏—Å—Ç–µ–º'
        ]
      }
    ]
  },
  {
    id: 'kitchen-appliances',
    name: '–ì–ê–õ –¢–û–ì–û–û–ù–´ –¶–ê–•–ò–õ–ì–ê–ê–ù –ë–ê–†–ê–ê',
    icon: 'üè†',
    subcategories: [
      {
        name: '–¢–æ–≥–æ–æ–Ω—ã —Ö—ç—Ä—ç–≥—Å—ç–ª',
        items: [
          '–¶–∞—Ö–∏–ª–≥–∞–∞–Ω –∑—É—É—Ö',
          '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω –∑—É—É—Ö',
          '–•–∞–ª–∞–∞–≥—á',
          '–ö–æ—Ñ–µ –º–∞—à–∏–Ω',
          '–ë–ª–µ–Ω–¥–µ—Ä'
        ]
      }
    ]
  },
  {
    id: 'home-appliances',
    name: '–ì–≠–† –ê–•–£–ô–ù –¶–ê–•–ò–õ–ì–ê–ê–ù –ë–ê–†–ê–ê',
    icon: 'üè°',
    subcategories: [
      {
        name: '–¶—ç–≤—ç—Ä–ª—ç–≥—ç—ç–Ω–∏–π —Ö—ç—Ä—ç–≥—Å—ç–ª',
        items: [
          '–¢–æ–æ—Å —Å–æ—Ä–æ–≥—á',
          '–£–≥–∞–∞–ª–≥—ã–Ω –º–∞—à–∏–Ω',
          '–•–∞—Ç–∞–∞–≥—á',
          '–ò–Ω–¥“Ø“Ø –º–∞—à–∏–Ω',
          '–£—Ç–∞–∞ —Å–æ—Ä–æ–≥—á'
        ]
      }
    ]
  },
  {
    id: 'computers',
    name: '–ö–û–ú–ü–¨–Æ–¢–ï–†, –ü–†–ò–ù–¢–ï–†',
    icon: 'üíª',
    subcategories: [
      {
        name: '–ö–æ–º–ø—å—é—Ç–µ—Ä',
        items: [
          '–î–µ—Å–∫—Ç–æ–ø –∫–æ–º–ø—å—é—Ç–µ—Ä',
          '–ù–æ—É—Ç–±—É–∫',
          '–¢–∞–±–ª–µ—Ç',
          '–ú–æ–Ω–∏—Ç–æ—Ä—ã',
          '–•—ç–≤–ª—ç–≥—á'
        ]
      }
    ]
  },
  {
    id: 'mobile-devices',
    name: '–ì–ê–† –£–¢–ê–°, –¢–ê–ë–õ–ï–¢',
    icon: 'üì±',
    subcategories: [
      {
        name: '–ì–∞—Ä —É—Ç–∞—Å',
        items: [
          '–£—Ö–∞–∞–ª–∞–≥ —É—Ç–∞—Å',
          '–•–∞–º–≥–∞–∞–ª–∞–ª—Ç—ã–Ω –±“Ø—Ä—ç—ç—Å',
          '–¶—ç–Ω—ç–≥–ª—ç–≥—á',
          '–ß–∏—Ö—ç–≤—á',
          '–î—ç–ª–≥—ç—Ü–∏–π–Ω —Ö—É—É—Ä–∞–π'
        ]
      }
    ]
  },
  {
    id: 'smart-tech',
    name: '–£–•–ê–ê–õ–ê–ì –¢–ï–•–ù–û–õ–û–ì–ò',
    icon: 'üîå',
    subcategories: [
      {
        name: '–£—Ö–∞–∞–ª–∞–≥ –≥—ç—Ä',
        items: [
          '–£—Ö–∞–∞–ª–∞–≥ –≥—ç—Ä—ç–ª',
          '–•–∞—Ä–∏—É–ª–∞–≥—á',
          '–ö–∞–º–µ—Ä —Å–∏—Å—Ç–µ–º',
          '–•–∞–∞–ª–≥–Ω—ã —Ü–æ–æ–∂',
          '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä —Ö—è–Ω–∞–≥—á'
        ]
      }
    ]
  },
  {
    id: 'health-beauty',
    name: '–≠–†“Æ“Æ–õ –ú–≠–ù–î, –ì–û–û –°–ê–ô–•–ê–ù',
    icon: 'üíÑ',
    subcategories: [
      {
        name: '–ì–æ–æ —Å–∞–π—Ö–∞–Ω—ã —Ö—ç—Ä—ç–≥—Å—ç–ª',
        items: [
          '“Æ—Å –∑–∞—Å–∞—Ö —Ö—ç—Ä—ç–≥—Å—ç–ª',
          '–ê—Ä—å—Å –∞—Ä—á–ª–∞—Ö',
          '–ì—ç–≥—ç—ç—Ä“Ø“Ø–ª—ç–≥—á',
          '–ú–∞—Å—Å–∞–∂–∏–π–Ω —Ö—ç—Ä—ç–≥—Å—ç–ª',
          '–≠—Ä“Ø“Ø–ª –º—ç–Ω–¥–∏–π–Ω —Ö—ç–º–∂–∏–≥—á'
        ]
      }
    ]
  },
  {
    id: 'kitchen-tools',
    name: '–ì–ê–õ –¢–û–ì–û–û, –ì–≠–† –ê–•–£–ô–ù –•–≠–†–≠–ì–°–≠–õ',
    icon: 'üç≥',
    subcategories: [
      {
        name: '–¢–æ–≥–æ–æ–Ω—ã —Ö—ç—Ä—ç–≥—Å—ç–ª',
        items: [
          '–•—É—Ç–≥–∞',
          '–¢–∞–≤–∞–≥',
          '–¢–æ–≥–æ–æ',
          '–•–∞–π—á–ª–∞–≥–∞ —Ö—ç—Ä—ç–≥—Å—ç–ª',
          '–•–∞–¥–≥–∞–ª–∞—Ö —Å–∞–≤'
        ]
      }
    ]
  },
  {
    id: 'furniture',
    name: '–¢–ê–í–ò–õ–ì–ê',
    icon: 'ü™ë',
    subcategories: [
      {
        name: '–ì—ç—Ä–∏–π–Ω —Ç–∞–≤–∏–ª–≥–∞',
        items: [
          '–°—É—É–¥–∞–ª',
          '–®–∏—Ä—ç—ç',
          '–û—Ä–æ–Ω',
          '–•—É–≤—Ü–∞—Å–Ω—ã —à“Ø“Ø–≥—ç—ç',
          '–¢–∞–≤–∏—É—Ä'
        ]
      }
    ]
  },
  {
    id: 'accessories',
    name: '–ù–≠–ú–≠–õ–¢ “Æ–ô–õ–ß–ò–õ–ì–≠–≠, –î–ê–ì–ê–õ–î–ê–• –•–≠–†–≠–ì–°–≠–õ',
    icon: 'üîß',
    subcategories: [
      {
        name: '–î–∞–≥–∞–ª–¥–∞—Ö —Ö—ç—Ä—ç–≥—Å—ç–ª',
        items: [
          '–ö–∞–±–µ–ª—å',
          '–ê–¥–∞–ø—Ç–µ—Ä',
          '–ë–∞—Ç–∞—Ä–µ–π',
          '–•–∞–¥–≥–∞–ª–∞—Ö —Ö—ç—Ä—ç–≥—Å—ç–ª',
          '–ó–∞—Å–≤–∞—Ä—ã–Ω —Ö—ç—Ä—ç–≥—Å—ç–ª'
        ]
      }
    ]
  }
]

export function CategoryMegaMenu({ isOpen, onClose }: CategoryMegaMenuProps) {
  const [selectedCategory, setSelectedCategory] = useState(categories[0])

  return (
    <Dialog open={isOpen} onClose={onClose} className="relative z-[60]">
      <DialogBackdrop
        transition
        className="fixed inset-0 bg-gray-500/75 transition-opacity duration-500 ease-in-out data-[closed]:opacity-0"
      />

      <div className="fixed inset-0 overflow-hidden">
        <div className="absolute inset-0 overflow-hidden">
          <div className="pointer-events-none fixed inset-y-0 left-0 flex max-w-full pr-10 sm:pr-16">
            <DialogPanel
              transition
              className="pointer-events-auto relative w-screen max-w-2xl transform transition duration-500 ease-in-out data-[closed]:-translate-x-full sm:duration-700"
            >
              <TransitionChild>
                <div className="absolute right-0 top-0 -mr-12 flex pl-2 pt-6 duration-500 ease-in-out data-[closed]:opacity-0 sm:-mr-14 sm:pl-4">
                  <button
                    type="button"
                    onClick={onClose}
                    className="relative rounded-full bg-gray-600 text-white hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-white p-2 shadow-lg"
                  >
                    <span className="absolute -inset-2.5" />
                    <span className="sr-only">Close panel</span>
                    <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
              </TransitionChild>
              <div className="relative flex h-full flex-col overflow-y-auto bg-white py-6 shadow-xl">
                <div className="px-4 sm:px-6">
                  <DialogTitle className="text-base font-semibold leading-6 text-gray-900 flex items-center">
                    <span className="text-xl mr-3">‚ò∞</span>
                    –ë“Ø—Ö –∞–Ω–≥–∏–ª–∞–ª
                  </DialogTitle>
                </div>
                <div className="relative mt-6 flex-1 px-4 sm:px-6">
                  {/* Drawer Content */}
                  <div className="flex h-full">
                    {/* Categories List */}
                    <div className="w-80 bg-gray-50 border-r overflow-y-auto">
                      {categories.map((category) => (
                        <button
                          key={category.id}
                          onMouseEnter={() => setSelectedCategory(category)}
                          onClick={() => setSelectedCategory(category)}
                          className={`w-full text-left px-4 py-4 flex items-center transition-all duration-200 border-l-4 ${
                            selectedCategory.id === category.id
                              ? 'bg-red-50 border-red-500 text-red-700'
                              : 'border-transparent text-gray-700 hover:bg-gray-100'
                          }`}
                        >
                          <span className="text-lg mr-3">{category.icon}</span>
                          <div className="flex-1">
                            <div className="font-medium text-sm leading-tight">
                              {category.name}
                            </div>
                          </div>
                          <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                          </svg>
                        </button>
                      ))}
                    </div>

                    {/* Subcategories Panel */}
                    <div className="flex-1 overflow-y-auto bg-white">
                      <div className="p-6">
                        <div className="mb-6">
                          <h3 className="text-xl font-bold text-gray-900 mb-2">
                            {selectedCategory.name}
                          </h3>
                          <div className="h-0.5 w-16 bg-red-500"></div>
                        </div>

                        <div className="space-y-8">
                          {selectedCategory.subcategories.map((subcategory, index) => (
                            <div key={index}>
                              <h4 className="text-lg font-semibold text-gray-900 mb-4 border-b border-gray-200 pb-2">
                                {subcategory.name}
                              </h4>
                              <div className="grid grid-cols-1 gap-2">
                                {subcategory.items.map((item, itemIndex) => (
                                  <Link
                                    key={itemIndex}
                                    to={`/products?category=${selectedCategory.id}&subcategory=${item}`}
                                    onClick={onClose}
                                    className="text-gray-600 hover:text-red-600 transition-colors py-1 px-2 rounded hover:bg-red-50"
                                  >
                                    {item}
                                  </Link>
                                ))}
                              </div>
                              <div className="mt-4">
                                <Link
                                  to={`/collections/${selectedCategory.id}`}
                                  onClick={onClose}
                                  className="inline-flex items-center text-red-600 hover:text-red-700 font-medium text-sm"
                                >
                                  –ë“Ø–≥–¥–∏–π–≥ “Ø–∑—ç—Ö
                                  <svg className="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                                  </svg>
                                </Link>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </DialogPanel>
          </div>
        </div>
      </div>
    </Dialog>
  )
}